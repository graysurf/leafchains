# syntax=docker/dockerfile:1.4

# This is the build stage for THXNET. node. Here we create the binary in a temporary image.
FROM ghcr.io/thxnet/ci-containers/substrate-based:build-2023.05.20-41956af as builder

WORKDIR /build
COPY . /build

RUN cargo build --locked --release

RUN <<EOF
#!/usr/bin/env bash

set -eu

declare -A chain_specs

chain_specs+=(
  ["thx-mainnet"]="mainnet.leafchain.thx"
  ["lmt-mainnet"]="mainnet.leafchain.lmt"

  ["thx-testnet"]="testnet.leafchain.thx"
  ["lmt-testnet"]="testnet.leafchain.lmt"
  ["txd-testnet"]="testnet.leafchain.txd"
  ["sand-testnet"]="testnet.leafchain.sand"
)

mkdir -pv "/chain-specs"
mkdir -pv "/genesis-data"

for name in ${!chain_specs[@]}; do
  chain_spec_file_name="/chain-specs/${chain_specs[$name]}.raw.json"
  genesis_state_file="/genesis-data/${chain_specs[$name]}.genesis-state"
  genesis_wasm_file="/genesis-data/${chain_specs[$name]}.genesis-wasm"

  /build/target/release/thxnet-leafchain \
    build-spec \
      --disable-default-bootnode \
      --log=error \
      --chain="$name" >"$chain_spec_file_name.origin"

  /build/target/release/thxnet-leafchain \
    build-spec \
      --disable-default-bootnode \
      --log=error \
      --raw \
      --chain="$chain_spec_file_name.origin" >"$chain_spec_file_name"

  rm -v "$chain_spec_file_name.origin"

  /build/target/release/thxnet-leafchain \
    export-genesis-state \
      --chain="$name" \
      --log=error > $genesis_state_file

  /build/target/release/thxnet-leafchain \
    export-genesis-wasm \
      --chain="$name" \
      --log=error > $genesis_wasm_file

done

EOF

FROM alpine as leafchain-genesis

LABEL description="Chain specifications and genesis file for leafchains of THXNET." \
    io.thxnet.image.type="final" \
    io.thxnet.image.authors="contact@thxlab.io" \
    io.thxnet.image.vendor="thxlab.io" \
    io.thxnet.image.description="Chain specifications and genesis file for leafchains of THXNET." \
    org.opencontainers.image.source="https://github.com/thxnet/leafchains"

COPY --from=builder /chain-specs /chain-specs
COPY --from=builder /genesis-data /genesis-data

# This is the 2nd stage: a very small image where we copy the THXENT. binary."
FROM docker.io/library/ubuntu:22.04 as leafchain

LABEL description="Container image for leafchains of THXNET." \
    io.thxnet.image.type="final" \
    io.thxnet.image.authors="contact@thxlab.io" \
    io.thxnet.image.vendor="thxlab.io" \
    io.thxnet.image.description="THXNET.: The Hybrid Next-Gen Blockchain Network" \
    org.opencontainers.image.source="https://github.com/thxnet/leafchains"

COPY --from=builder /build/target/release/thxnet-leafchain /usr/local/bin

RUN <<EOF
#!/usr/bin/env bash

set -eu

useradd -m -u 1000 -U -s /bin/sh -d /leafchain thxnet

mkdir -p /data /leafchain/.local/share

chown -R thxnet:thxnet /data

ln -s /data /leafchain/.local/share/thxnet-leafchain

# unclutter and minimize the attack surface
rm -rf /usr/bin /usr/sbin

# check if executable works in this container
/usr/local/bin/thxnet-leafchain --version

EOF

USER thxnet

VOLUME ["/data"]

ENTRYPOINT ["/usr/local/bin/thxnet-leafchain"]
